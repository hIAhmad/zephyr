# SPDX-License-Identifier: Apache-2.0
#
# Copyright (c) 2024, Siemens AG

# This script generates a source file, to be included by the RAM disk device driver,
# that aggregates disk images binary data for RAM disk device instances that use
# existing disk images as backing store.

cmake_minimum_required(VERSION 3.20.0)

file(WRITE ${GENERATED_FILE} "/*\n"
                             " * Generated by gen_ramdisk_diskimages_inc.cmake\n"
                             " */\n")

if(CONFIG_TOOLCHAIN_SUPPORTS_GNU_EXTENSIONS)
file(WRITE ${GENERATED_FILE}.S "/*\n"
                             " * Generated by gen_ramdisk_diskimages_inc.cmake\n"
                             " */\n\n")
file(APPEND ${GENERATED_FILE}.S "#include <zephyr/toolchain.h>\n"
                                "#include <zephyr/linker/sections.h>\n")
endif()

foreach(dev_path sector_size diskimage_path IN ZIP_LISTS RAMDISK_DEV_PATHS RAMDISK_SECTOR_SIZES RAMDISK_DISKIMG_PATHS)
  # Generate an informational comment for the device node.
  file(APPEND ${GENERATED_FILE} "\n/* DTS device node path: ${dev_path}\n"
                                  " * sector-size: ${sector_size}\n"
                                  " * disk-image-path: ${diskimage_path}\n"
                                  " */\n\n")
  if(CONFIG_TOOLCHAIN_SUPPORTS_GNU_EXTENSIONS)
    file(APPEND ${GENERATED_FILE}.S "\n/* DTS device node path: ${dev_path} */\n\n")
  endif()

  # Convert DTS device node path to internal device path ID.
  string(TOLOWER ${dev_path} dev_path)
  string(REPLACE "/" "_S_" dev_path ${dev_path})
  string(REGEX REPLACE "[-,.@/+]" "_" dev_path_id ${dev_path})
  string(PREPEND dev_path_id "N")

  # Emit disk sector count.
  file(SIZE ${diskimage_path} diskimage_size)
  math(EXPR ramdisk_sector_count "${diskimage_size} / ${sector_size}")
  file(APPEND ${GENERATED_FILE} "\#define DT_${dev_path_id}_sector_count ${ramdisk_sector_count}\n\n")

  # Include disk image binary data.
  if(CONFIG_TOOLCHAIN_SUPPORTS_GNU_EXTENSIONS)
    # GNU extensions are available, use .incbin directive for build efficiency.
    file(APPEND ${GENERATED_FILE} "extern uint8_t DT_${dev_path_id}_buf[${diskimage_size}];\n")
    file(APPEND ${GENERATED_FILE}.S "GDATA(DT_${dev_path_id}_buf)\n"
                                    "SECTION_VAR(DATA, DT_${dev_path_id}_buf)\n"
                                    "\tALIGN(4)\n"
                                    "\t.incbin\t\"${diskimage_path}\"\n")
  else()
    # GNU extensions are not available, define an array to include disk image binary data as
    # array initializer generated in a prior build step.
    file(APPEND ${GENERATED_FILE} "static uint8_t  DT_${dev_path_id}_buf[${diskimage_size}] = {\n"
                                  "\#include \"${dev_path_id}.inc\"\n"
                                  "};\n")
  endif()
endforeach()
